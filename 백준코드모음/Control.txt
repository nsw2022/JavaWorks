반복문은 while문과 do-while, for문 중 아무거나 사용하되 가급적 모두 사용해 보자. 

문제1.
프로그램 사용자로부터 양의 정수를 하나 입력 받아서, 그 수만큼 "Hello World!"를
출력하는 프로그램을 작성해보자.


문제2.
프로그램 사용자로부터 양의 정수를 하나 입력 받은 다음, 그 수만큼 3의 배수를 출력
하는 프로그램을 작성해 보자. 예를 들어 5를 입력받았다면, 3 6 9 12 15를 출력해야
하고 3을 입력받았다면, 3 6 9 를 출력해야 한다.


문제3.
프로그램 사용자로부터 계속해서 정수를 입력받는다. 그리고 그 값을 계속해서 더해
나간다. 이러한 작업은 프로그램 사용자가 0을 입력할 때까지 계속되어야 하며, 
0이 입력되면 입력된 모든 정수의 합을 출력하고 프로그램을 종료한다.


문제4.
프로그램 사용자로부터 입력 받은 숫자에 해당하는 구구단을 출력하되, 역순으로 
출력하는 프로그램을 작성해 보자.

문제5.
1이상 100미만의 정수 중에서 7의 배수와 9의 배수를 출력하는 프로그램을 작성해 보자.
단! 7의 배수이면서 동시에 9의 배수인 정수는 한번만 출력해야 한다.


문제6.
두 개의 정수를 입력 받아서 두 수의 차를 출력하는 프로그램을 구현해 보자. 단, 무조건
큰 수에서 작은 수를 뺀 결과를 출력해야 한다. 예를 들어서 입력된 두 수가 순서에 
상관없이 12와 5라면 7이 출력되어야 하고, 입력된 두 수가 순서에 상관없이 4와 16이라면
12가 출력되어야 한다. 즉, 출력 결과는 무조건 0 이상이 되어야 한다.


문제7.
문제 6번의 내용을 if~else를 사용하여 해결하였는가? 이를 if~else가 아닌 삼항연산자를
이용하여 구현해 보자. 


문제8.
구구단을 출력하되 짝수 단(2단, 4단, 6단, 8단)만 출력되도록 한다. 또한 2단은 2*2까지,
4단은 4*4까지, 6단은 6*6까지, 8단은 8*8까지만 출력되도록 해보자. 이를 해결하기 
위해 break와 continue문을 사용해보자.


문제9.
프로그램 사용자로부터 입력 받은 정수의 평균을 출력하는 프로그램을 작성하되
다음 두 가지 조건을 만족시켜야 한다.
  - 먼저 몇 개의 정수를 입력할 것인지 프로그램 사용자에게 묻는다. 그리고 그 수
    만큼 정수를 입력 받는다.
  - 평균값은 소수점 이하까지 출력되도록 한다.


문제10.
프로그램 사용자로부터 총 5개의 정수를 입력 받아서, 그 수의 합을 출력하는 프로그램
을 작성해보자. 단, 한가지 조건이 있다. 정수는 반드시 1 이상이어야 한다. 만약에 
1 미만의 수가 입력되는 경우에는, 이를 입력으로 인정하지 않고 재 입력을 요구해야
한다. 그래서 결국 1 이상의 정수 5개를 모두 입력 받을 수 있는 프로그램을 완성해야
한다.


문제11.
아래의 출력을 보이는 프로그램을 작성해보자.
 *
 o *
 o o *
 o o o *
 o o o o *

 참고로, 총 5행에 걸쳐서 출력이 이루어지고, 행이 더해질 때마다 'o'문자가 증가한다는
특징을 기반으로 while문의 중첩을 구성하면 된다.





